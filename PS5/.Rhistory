x = c(1,2,5,6,8)
y = c(na, 4,5,6,)
y = c(NA, 4,5,6,)
y = c(NA, 4,5,6, 10)
is.na(x)
is.na(y)
any(is.na(x))
x[1]
x[2]
x[5]
x
x[-1]
x[:-1]
tail(x)
end(x)
tail(x,1)
?setMethod
#' @export
setMethod(f = "integrateIt",
definition = function(x, y, range, rule){
a <- range[1]
b <- range[2]
}
)
rule = "s"
! rule %in% c("Simpson", "Trapezoid"
)
! rule %in% c("Simpson", "Trapezoid")
rule %in% c("Simpson", "Trapezoid")
library(devtools)
library(roxygen2)
current.code <- as.package("integrateIt")
setwd("/Users/ysui/Documents/GitHub/AppliedStatisticalProgramming2022/PS5/")
current.code <- as.package("integrateIt")
# ------------------------------------------------------
# Set working directory
# ------------------------------------------------------
setwd("/Users/ysui/Documents/GitHub/AppliedStatisticalProgramming2022/PS5")
load_all(current.code) # Load all of the functions so you can use them
# ------------------------------------------------------
# load pacakge
# ------------------------------------------------------
current.code <- as.package("integrateIt")
load_all(current.code) # Load all of the functions so you can use them
# ------------------------------------------------------
# load pacakge
# ------------------------------------------------------
current.code <- as.package("integrateIt")
load_all(current.code) # Load all of the functions so you can use them
# ------------------------------------------------------
# load pacakge
# ------------------------------------------------------
current.code <- as.package("integrateIt")
load_all(current.code) # Load all of the functions so you can use them
# ------------------------------------------------------
# load pacakge
# ------------------------------------------------------
current.code <- as.package("integrateIt")
load_all(current.code) # Load all of the functions so you can use them
current.code <- as.package("integrateIt")
load_all(current.code) # Load all of the functions so you can use them
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
R
version
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
check(current.code) # Run the R checks
install(pkg=current.code, local=TRUE) # Install the package
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
?setMethod
sep(1,10,1)
seq(1,10,1)
seq(1,10,0.5)
seq(1, 10, 0.5)
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Simpson")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Trapezoid")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
integrateIt(seq(1, 10, 0.5), function(x){x^2}, c(2.5,5.5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
seq(1, 10, 0.5)
integrateIt(seq(1, 10, 0.5), function(x){x+1}, c(2.5,5.5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
integrateIt(seq(1, 10, 0.5), function(x){x+1}, c(2.5,5.5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
integrateIt(seq(1, 10, 0.5), function(x){x+1}, c(2.5,5.5), rule = "Simpson")
integrateIt(seq(1, 10, 0.5), function(x){x+1}, c(2,5), rule = "Simpson")
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
y_vals[2,3]
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson") # more accurate with smaller intervals
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# check(current.code) # Run the R checks
install(pkg=current.code, local=TRUE) # Install the package
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson") # more accurate with smaller intervals
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
test1 <- integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
print(test1)
test1
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson") # more accurate with smaller intervals
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
test1 <- integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
print(test1)
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson") # more accurate with smaller intervals
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson") # more accurate with smaller intervals
# ------------------------------------------------------
library(devtools)
library(roxygen2)
# ------------------------------------------------------
# Set working directory
# ------------------------------------------------------
setwd("/Users/ysui/Documents/GitHub/AppliedStatisticalProgramming2022/PS5")
# ------------------------------------------------------
# load package
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code)
document(current.code) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
test1 <- integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
print(test1)
# test Trapezoid
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
# more accurate with smaller intervals
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson")
?load_all
??load_all
??document
library(devtools)
library(roxygen2)
# ------------------------------------------------------
# Set working directory
# ------------------------------------------------------
setwd("/Users/ysui/Documents/GitHub/AppliedStatisticalProgramming2022/PS5")
# ------------------------------------------------------
# load package
# ------------------------------------------------------
current.code <- as.package("integrateIt")
# Load all of the functions so you can use them
load_all(current.code, quiet = TRUE)
document(current.code, quiet = TRUE) # Make the help files
# ------------------------------------------------------
# Test functions
# ------------------------------------------------------
test1 <- integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Simpson")
print(test1)
# test Trapezoid
integrateIt(1:10, function(x){x+1}, c(2,5), rule = "Trapezoid")
# more accurate with smaller intervals
integrateIt(seq(1, 10, 0.1), function(x){x+1}, c(2,5), rule = "Simpson")
